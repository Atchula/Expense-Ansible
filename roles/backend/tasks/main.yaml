- name : Disable Old Version Of nodejs
  ansible.builtin.command : dnf module disable nodejs -y

- name : Enable Latest Varsion Of nodejs
  ansible.builtin.command : dnf module enable nodejs:20 -y

- name : Installing nodejs
  ansible.builtin.dnf :
    name : nodejs
    state : latest

- name : Creating Application User
  ansible.builtin.user :
   name : expense

# - name : Creating Location /app To Store Code
#   ansible.builtin.file:
#    path : /app
#    state : directory  

# - name : Download and Unarchive Code To /app 
#   ansible.builtin.unarchive :
#    src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#    dest : /app
#    remote_src : yes

- name : Import Common Role
  ansible.builtin.import_role:
   name : common
   

- name : Installing Dependencies For node App
  community.general.npm:
   path : /app 

- name : Copy Backend Service File To systemd
  ansible.builtin.template:
   src : backend.service.j2
   dest : /etc/systemd/system/backend.service

- name : Reload Daemon
  ansible.builtin.systemd_service :
   daemon_reload: true

- name : Install Dependencies To Connet MySQL
  ansible.builtin.pip :
    name : "{{item}}"
    state : latest
    executable : pip3.9
  loop :
   - PyMySQL
   - cryptography

- name : Install MYSQL
  ansible.builtin.dnf :
   name : mysql
   state : latest
  

- name : Connect MySQL
  community.mysql.mysql_db :
    login_user  : "{{superuser}}"
    login_password : "{{superuserpass}}"
    login_host  :  "{{loginhost}}"
    name : all
    target : /app/schema/backend.sql
    state : import  

- name : Start And Enable Backed Service
  ansible.builtin.systemd_service :
   name : backend
   state : started
   enabled : yes  